[ @file = "D:\dev\projects\Monkey C\Essence\source\Globals.mc"; @line = 1; @symbol_usingdef<0> = [Toybox,1,6,12]; @symbol_usingdef<1> = [System,1,13,19]; ]
using Toybox.System;
[ @file = "D:\dev\projects\Monkey C\Essence\source\Globals.mc"; @line = 2; @symbol_usingdef<0> = [Toybox,2,6,12]; @symbol_usingdef<1> = [Complications,2,13,26]; ]
using Toybox.Complications;
[ @file = "D:\dev\projects\Monkey C\Essence\source\Globals.mc"; @line = 3; @symbol_usingdef<0> = [Toybox,3,6,12]; @symbol_usingdef<1> = [Graphics,3,13,21]; ]
using Toybox.Graphics;
[ @file = "D:\dev\projects\Monkey C\Essence\source\Globals.mc"; @line = 5; @position = 11; @symbol_vardef = [bboxes,5,11,17]; ]
var bboxes;
[ @file = "D:\dev\projects\Monkey C\Essence\source\Globals.mc"; @line = 6; @position = 11; @symbol_vardef = [boundingBoxes,6,11,24]; ]
var boundingBoxes;
[ @file = "D:\dev\projects\Monkey C\Essence\source\Globals.mc"; @line = 7; @position = 4; @symbol_vardef = [redrawLayout,7,4,16]; ]
var redrawLayout = false;
[ @file = "D:\dev\projects\Monkey C\Essence\source\Globals.mc"; @line = 8; @position = 4; @symbol_vardef = [batterySave,8,4,15]; ]
var batterySave = false;
[ @file = "D:\dev\projects\Monkey C\Essence\source\Globals.mc"; @line = 9; @position = 4; @symbol_vardef = [showGraph,9,4,13]; ]
var showGraph = 0;
[ @file = "D:\dev\projects\Monkey C\Essence\source\Globals.mc"; @line = 10; @position = 4; @symbol_vardef = [darkMode,10,4,12]; ]
var darkMode = true;
[ @file = "D:\dev\projects\Monkey C\Essence\source\Globals.mc"; @line = 12; @symbol_functiondef = [checkBoundingBoxes,12,16,34]; @symbol_param<0> = [points,12,35,41]; ]
function checkBoundingBoxes(points) {
D_dev_projects_Monkey_C_Essence_source_Globals_mc_12_43_31_0_start:
[ "D:\dev\projects\Monkey C\Essence\source\Globals.mc" 13 2 ]
    for @D_dev_projects_Monkey_C_Essence_source_Globals_mc_13_2_29_2_for_test @D_dev_projects_Monkey_C_Essence_source_Globals_mc_13_2_29_2_for_incr @D_dev_projects_Monkey_C_Essence_source_Globals_mc_13_2_29_2_for_end;
D_dev_projects_Monkey_C_Essence_source_Globals_mc_13_2_29_2_for_init:
    [ "D_dev_projects_Monkey_C_Essence_source_Globals_mc_13_2_29_2_for_begin" "D_dev_projects_Monkey_C_Essence_source_Globals_mc_13_2_29_2_for_end" ]
    %i.1 = local;
    symbol [ i %i.1 13 11 12 ];
    %tmp.1 = 0;
    lputv %i.1 %tmp.1;
    symbol [ i %i.1 13 11 12 ];
D_dev_projects_Monkey_C_Essence_source_Globals_mc_13_2_29_2_for_test:
    %tmp.2 = lgetv %i.1;
    symbol [ i %tmp.2 13 18 19 ];
    symbol [ boundingBoxes %tmp.4 13 22 35 ];
    %tmp.4 = getv ? :boundingBoxes;
    symbol [ size %tmp.5 13 36 40 ];
    %tmp.5 = getv function %tmp.4 :size;
    %tmp.6 = invoke %tmp.4 %tmp.5();
    %tmp.7 = lt %tmp.2 %tmp.6;
    bf %tmp.7 @D_dev_projects_Monkey_C_Essence_source_Globals_mc_13_2_29_2_for_end;
D_dev_projects_Monkey_C_Essence_source_Globals_mc_13_2_29_2_for_begin:
D_dev_projects_Monkey_C_Essence_source_Globals_mc_13_49_29_2_start:
[ "D:\dev\projects\Monkey C\Essence\source\Globals.mc" 14 4 ]
    [ "D_dev_projects_Monkey_C_Essence_source_Globals_mc_13_49_29_2_start" "D_dev_projects_Monkey_C_Essence_source_Globals_mc_13_49_29_2_stop" ]
    %currentBounds.2 = local;
    symbol [ currentBounds %currentBounds.2 14 8 21 ];
    symbol [ boundingBoxes %tmp.9 14 24 37 ];
    %tmp.9 = getv ? :boundingBoxes;
    %tmp.10 = lgetv %i.1;
    symbol [ i %tmp.10 14 38 39 ];
    %tmp.11 = agetv %tmp.9 %tmp.10;
    lputv %currentBounds.2 %tmp.11;
    symbol [ currentBounds %currentBounds.2 14 8 21 ];
[ "D:\dev\projects\Monkey C\Essence\source\Globals.mc" 15 4 ]
D_dev_projects_Monkey_C_Essence_source_Globals_mc_15_4_28_4_if_stmt:
    %tmp.12 = self;
    symbol [ checkBoundsForComplication %tmp.13 15 8 34 ];
    %tmp.13 = getv function %tmp.12 :checkBoundsForComplication;
    %tmp.14 = lgetv %points;
    symbol [ points %tmp.14 15 35 41 ];
    %tmp.15 = lgetv %currentBounds.2;
    symbol [ currentBounds %tmp.15 15 43 56 ];
    %tmp.16 = "bounds";
    %tmp.17 = agetv %tmp.15 %tmp.16;
    %tmp.18 = invoke %tmp.12 %tmp.13(%tmp.14, %tmp.17);
    bf %tmp.18 @D_dev_projects_Monkey_C_Essence_source_Globals_mc_15_4_28_4_if_end;
D_dev_projects_Monkey_C_Essence_source_Globals_mc_15_4_28_4_if_true:
D_dev_projects_Monkey_C_Essence_source_Globals_mc_15_69_28_4_start:
[ "D:\dev\projects\Monkey C\Essence\source\Globals.mc" 16 6 ]
D_dev_projects_Monkey_C_Essence_source_Globals_mc_16_6_27_6_if_stmt:
D_dev_projects_Monkey_C_Essence_source_Globals_mc_16_10_16_73_begin:
    symbol [ fieldLayout %tmp.20 16 10 21 ];
    %tmp.20 = getv ? :fieldLayout;
    %tmp.21 = lgetv %i.1;
    symbol [ i %tmp.21 16 22 23 ];
    %tmp.22 = agetv %tmp.20 %tmp.21;
    %tmp.23 = "id";
    %tmp.24 = agetv %tmp.22 %tmp.23;
    symbol [ equals %tmp.25 16 31 37 ];
    %tmp.25 = getv function %tmp.24 :equals;
    %tmp.26 = "FieldLowerCenter";
    %tmp.27 = invoke %tmp.24 %tmp.25(%tmp.26);
    bf %tmp.27 @D_dev_projects_Monkey_C_Essence_source_Globals_mc_16_6_27_6_if_else_false;
D_dev_projects_Monkey_C_Essence_source_Globals_mc_16_61_16_73_true:
    symbol [ showGraph %tmp.29 16 61 70 ];
    %tmp.29 = getv ? :showGraph;
    %tmp.30 = 0;
    %tmp.31 = gt %tmp.29 %tmp.30;
    push %tmp.31;
D_dev_projects_Monkey_C_Essence_source_Globals_mc_16_61_16_73_end:
    %tmp.32 = phi [%tmp.27 @D_dev_projects_Monkey_C_Essence_source_Globals_mc_16_10_16_73_begin] [%tmp.31 @D_dev_projects_Monkey_C_Essence_source_Globals_mc_16_61_16_73_true] [%tmp.32 @D_dev_projects_Monkey_C_Essence_source_Globals_mc_16_61_16_73_end];
    bf %tmp.32 @D_dev_projects_Monkey_C_Essence_source_Globals_mc_16_6_27_6_if_else_false;
D_dev_projects_Monkey_C_Essence_source_Globals_mc_16_6_27_6_if_true:
D_dev_projects_Monkey_C_Essence_source_Globals_mc_16_76_21_6_start:
[ "D:\dev\projects\Monkey C\Essence\source\Globals.mc" 17 8 ]
D_dev_projects_Monkey_C_Essence_source_Globals_mc_17_8_19_8_if_stmt:
    symbol [ graphCatalog %tmp.34 17 12 24 ];
    %tmp.34 = getv ? :graphCatalog;
    symbol [ showGraph %tmp.36 17 25 34 ];
    %tmp.36 = getv ? :showGraph;
    %tmp.37 = agetv %tmp.34 %tmp.36;
    %tmp.38 = "complicationId";
    %tmp.39 = agetv %tmp.37 %tmp.38;
    %tmp.40 = null;
    %tmp.41 = eq %tmp.39 %tmp.40;
    bf %tmp.41 @D_dev_projects_Monkey_C_Essence_source_Globals_mc_17_8_19_8_if_end;
D_dev_projects_Monkey_C_Essence_source_Globals_mc_17_8_19_8_if_true:
D_dev_projects_Monkey_C_Essence_source_Globals_mc_17_63_19_8_start:
[ "D:\dev\projects\Monkey C\Essence\source\Globals.mc" 18 10 ]
    %tmp.42 = false;
    ret %tmp.42;
D_dev_projects_Monkey_C_Essence_source_Globals_mc_17_63_19_8_stop:
    goto @D_dev_projects_Monkey_C_Essence_source_Globals_mc_17_8_19_8_if_end;
D_dev_projects_Monkey_C_Essence_source_Globals_mc_17_8_19_8_if_end:
[ "D:\dev\projects\Monkey C\Essence\source\Globals.mc" 20 8 ]
    symbol [ graphCatalog %tmp.44 20 15 27 ];
    %tmp.44 = getv ? :graphCatalog;
    symbol [ showGraph %tmp.46 20 28 37 ];
    %tmp.46 = getv ? :showGraph;
    %tmp.47 = agetv %tmp.44 %tmp.46;
    %tmp.48 = "complicationId";
    %tmp.49 = agetv %tmp.47 %tmp.48;
    ret %tmp.49;
D_dev_projects_Monkey_C_Essence_source_Globals_mc_16_76_21_6_stop:
    goto @D_dev_projects_Monkey_C_Essence_source_Globals_mc_16_6_27_6_if_end;
D_dev_projects_Monkey_C_Essence_source_Globals_mc_16_6_27_6_if_else_false:
D_dev_projects_Monkey_C_Essence_source_Globals_mc_21_13_27_6_start:
[ "D:\dev\projects\Monkey C\Essence\source\Globals.mc" 22 8 ]
    [ "D_dev_projects_Monkey_C_Essence_source_Globals_mc_21_13_27_6_start" "D_dev_projects_Monkey_C_Essence_source_Globals_mc_21_13_27_6_stop" ]
    %dataIndex.3 = local;
    symbol [ dataIndex %dataIndex.3 22 12 21 ];
    symbol [ fieldLayout %tmp.51 22 24 35 ];
    %tmp.51 = getv ? :fieldLayout;
    %tmp.52 = lgetv %i.1;
    symbol [ i %tmp.52 22 36 37 ];
    %tmp.53 = agetv %tmp.51 %tmp.52;
    %tmp.54 = "data";
    %tmp.55 = agetv %tmp.53 %tmp.54;
    lputv %dataIndex.3 %tmp.55;
    symbol [ dataIndex %dataIndex.3 22 12 21 ];
[ "D:\dev\projects\Monkey C\Essence\source\Globals.mc" 23 8 ]
D_dev_projects_Monkey_C_Essence_source_Globals_mc_23_8_25_8_if_stmt:
    symbol [ fieldCatalog %tmp.57 23 12 24 ];
    %tmp.57 = getv ? :fieldCatalog;
    %tmp.58 = lgetv %dataIndex.3;
    symbol [ dataIndex %tmp.58 23 25 34 ];
    %tmp.59 = agetv %tmp.57 %tmp.58;
    %tmp.60 = "complicationId";
    %tmp.61 = agetv %tmp.59 %tmp.60;
    %tmp.62 = null;
    %tmp.63 = eq %tmp.61 %tmp.62;
    bf %tmp.63 @D_dev_projects_Monkey_C_Essence_source_Globals_mc_23_8_25_8_if_end;
D_dev_projects_Monkey_C_Essence_source_Globals_mc_23_8_25_8_if_true:
D_dev_projects_Monkey_C_Essence_source_Globals_mc_23_63_25_8_start:
[ "D:\dev\projects\Monkey C\Essence\source\Globals.mc" 24 10 ]
    %tmp.64 = false;
    ret %tmp.64;
D_dev_projects_Monkey_C_Essence_source_Globals_mc_23_63_25_8_stop:
    goto @D_dev_projects_Monkey_C_Essence_source_Globals_mc_23_8_25_8_if_end;
D_dev_projects_Monkey_C_Essence_source_Globals_mc_23_8_25_8_if_end:
[ "D:\dev\projects\Monkey C\Essence\source\Globals.mc" 26 8 ]
    symbol [ fieldCatalog %tmp.66 26 15 27 ];
    %tmp.66 = getv ? :fieldCatalog;
    %tmp.67 = lgetv %dataIndex.3;
    symbol [ dataIndex %tmp.67 26 28 37 ];
    %tmp.68 = agetv %tmp.66 %tmp.67;
    %tmp.69 = "complicationId";
    %tmp.70 = agetv %tmp.68 %tmp.69;
    ret %tmp.70;
D_dev_projects_Monkey_C_Essence_source_Globals_mc_21_13_27_6_stop:
D_dev_projects_Monkey_C_Essence_source_Globals_mc_16_6_27_6_if_end:
D_dev_projects_Monkey_C_Essence_source_Globals_mc_15_69_28_4_stop:
    goto @D_dev_projects_Monkey_C_Essence_source_Globals_mc_15_4_28_4_if_end;
D_dev_projects_Monkey_C_Essence_source_Globals_mc_15_4_28_4_if_end:
D_dev_projects_Monkey_C_Essence_source_Globals_mc_13_49_29_2_stop:
D_dev_projects_Monkey_C_Essence_source_Globals_mc_13_2_29_2_for_incr:
[ "D:\dev\projects\Monkey C\Essence\source\Globals.mc" 13 ]
    %tmp.73 = lgetv %i.1;
    symbol [ i %tmp.73 13 44 45 ];
    %tmp.74 = add %tmp.73 1;
    lputv %i.1 %tmp.74;
    symbol [ i %i.1 13 44 45 ];
    goto @D_dev_projects_Monkey_C_Essence_source_Globals_mc_13_2_29_2_for_test;
D_dev_projects_Monkey_C_Essence_source_Globals_mc_13_2_29_2_for_end:
[ "D:\dev\projects\Monkey C\Essence\source\Globals.mc" 30 2 ]
    %tmp.75 = false;
    ret %tmp.75;
D_dev_projects_Monkey_C_Essence_source_Globals_mc_12_43_31_0_stop:
}
[ @file = "D:\dev\projects\Monkey C\Essence\source\Globals.mc"; @line = 32; @symbol_functiondef = [checkBoundsForComplication,32,16,42]; @symbol_param<0> = [points,32,43,49]; @symbol_param<1> = [boundingBox,32,51,62]; ]
function checkBoundsForComplication(points, boundingBox) {
D_dev_projects_Monkey_C_Essence_source_Globals_mc_32_64_34_0_start:
[ "D:\dev\projects\Monkey C\Essence\source\Globals.mc" 33 2 ]
    %tmp.1 = self;
    symbol [ boxContains %tmp.2 33 9 20 ];
    %tmp.2 = getv function %tmp.1 :boxContains;
    %tmp.3 = lgetv %points;
    symbol [ points %tmp.3 33 21 27 ];
    %tmp.4 = lgetv %boundingBox;
    symbol [ boundingBox %tmp.4 33 29 40 ];
    %tmp.5 = 0;
    %tmp.6 = agetv %tmp.4 %tmp.5;
    %tmp.7 = lgetv %boundingBox;
    symbol [ boundingBox %tmp.7 33 45 56 ];
    %tmp.8 = 1;
    %tmp.9 = agetv %tmp.7 %tmp.8;
    %tmp.10 = invoke %tmp.1 %tmp.2(%tmp.3, %tmp.6, %tmp.9);
    ret %tmp.10;
D_dev_projects_Monkey_C_Essence_source_Globals_mc_32_64_34_0_stop:
}
[ @file = "D:\dev\projects\Monkey C\Essence\source\Globals.mc"; @line = 36; @symbol_functiondef = [boxContains,36,16,27]; @symbol_param<0> = [points,36,28,34]; @symbol_param<1> = [boxMinXY,36,36,44]; @symbol_param<2> = [boxMaxXY,36,46,54]; ]
function boxContains(points, boxMinXY, boxMaxXY) {
D_dev_projects_Monkey_C_Essence_source_Globals_mc_36_56_43_0_start:
[ "D:\dev\projects\Monkey C\Essence\source\Globals.mc" 37 2 ]
D_dev_projects_Monkey_C_Essence_source_Globals_mc_38_4_41_27_begin:
D_dev_projects_Monkey_C_Essence_source_Globals_mc_38_4_40_27_begin:
D_dev_projects_Monkey_C_Essence_source_Globals_mc_38_4_39_27_begin:
    %tmp.1 = lgetv %points;
    symbol [ points %tmp.1 38 4 10 ];
    %tmp.2 = 0;
    %tmp.3 = agetv %tmp.1 %tmp.2;
    %tmp.4 = lgetv %boxMaxXY;
    symbol [ boxMaxXY %tmp.4 38 17 25 ];
    %tmp.5 = 0;
    %tmp.6 = agetv %tmp.4 %tmp.5;
    %tmp.7 = lte %tmp.3 %tmp.6;
    %tmp.8 = dup %tmp.7;
    bf %tmp.8 @D_dev_projects_Monkey_C_Essence_source_Globals_mc_39_4_39_27_end;
D_dev_projects_Monkey_C_Essence_source_Globals_mc_39_4_39_27_true:
    %tmp.9 = lgetv %points;
    symbol [ points %tmp.9 39 4 10 ];
    %tmp.10 = 1;
    %tmp.11 = agetv %tmp.9 %tmp.10;
    %tmp.12 = lgetv %boxMaxXY;
    symbol [ boxMaxXY %tmp.12 39 17 25 ];
    %tmp.13 = 1;
    %tmp.14 = agetv %tmp.12 %tmp.13;
    %tmp.15 = lte %tmp.11 %tmp.14;
    %tmp.16 = and %tmp.7 %tmp.15;
    push %tmp.16;
D_dev_projects_Monkey_C_Essence_source_Globals_mc_39_4_39_27_end:
    %tmp.17 = phi [%tmp.8 @D_dev_projects_Monkey_C_Essence_source_Globals_mc_38_4_39_27_begin] [%tmp.16 @D_dev_projects_Monkey_C_Essence_source_Globals_mc_39_4_39_27_true] [%tmp.17 @D_dev_projects_Monkey_C_Essence_source_Globals_mc_39_4_39_27_end];
    %tmp.18 = dup %tmp.17;
    bf %tmp.18 @D_dev_projects_Monkey_C_Essence_source_Globals_mc_40_4_40_27_end;
D_dev_projects_Monkey_C_Essence_source_Globals_mc_40_4_40_27_true:
    %tmp.19 = lgetv %points;
    symbol [ points %tmp.19 40 4 10 ];
    %tmp.20 = 0;
    %tmp.21 = agetv %tmp.19 %tmp.20;
    %tmp.22 = lgetv %boxMinXY;
    symbol [ boxMinXY %tmp.22 40 17 25 ];
    %tmp.23 = 0;
    %tmp.24 = agetv %tmp.22 %tmp.23;
    %tmp.25 = gte %tmp.21 %tmp.24;
    %tmp.26 = and %tmp.17 %tmp.25;
    push %tmp.26;
D_dev_projects_Monkey_C_Essence_source_Globals_mc_40_4_40_27_end:
    %tmp.27 = phi [%tmp.18 @D_dev_projects_Monkey_C_Essence_source_Globals_mc_38_4_40_27_begin] [%tmp.26 @D_dev_projects_Monkey_C_Essence_source_Globals_mc_40_4_40_27_true] [%tmp.27 @D_dev_projects_Monkey_C_Essence_source_Globals_mc_40_4_40_27_end];
    %tmp.28 = dup %tmp.27;
    bf %tmp.28 @D_dev_projects_Monkey_C_Essence_source_Globals_mc_41_4_41_27_end;
D_dev_projects_Monkey_C_Essence_source_Globals_mc_41_4_41_27_true:
    %tmp.29 = lgetv %points;
    symbol [ points %tmp.29 41 4 10 ];
    %tmp.30 = 1;
    %tmp.31 = agetv %tmp.29 %tmp.30;
    %tmp.32 = lgetv %boxMinXY;
    symbol [ boxMinXY %tmp.32 41 17 25 ];
    %tmp.33 = 1;
    %tmp.34 = agetv %tmp.32 %tmp.33;
    %tmp.35 = gte %tmp.31 %tmp.34;
    %tmp.36 = and %tmp.27 %tmp.35;
    push %tmp.36;
D_dev_projects_Monkey_C_Essence_source_Globals_mc_41_4_41_27_end:
    %tmp.37 = phi [%tmp.28 @D_dev_projects_Monkey_C_Essence_source_Globals_mc_38_4_41_27_begin] [%tmp.36 @D_dev_projects_Monkey_C_Essence_source_Globals_mc_41_4_41_27_true] [%tmp.37 @D_dev_projects_Monkey_C_Essence_source_Globals_mc_41_4_41_27_end];
    ret %tmp.37;
D_dev_projects_Monkey_C_Essence_source_Globals_mc_36_56_43_0_stop:
}
[ @file = "D:\dev\projects\Monkey C\Essence\source\Globals.mc"; @line = 45; @position = 4; @symbol_vardef = [fieldLayout,45,4,15]; ]
var fieldLayout;
[ @file = "D:\dev\projects\Monkey C\Essence\source\Globals.mc"; @line = 80; @position = 4; @symbol_vardef = [fieldCatalog,80,4,16]; ]
var fieldCatalog;
[ @file = "D:\dev\projects\Monkey C\Essence\source\Globals.mc"; @line = 195; @position = 4; @symbol_vardef = [graphCatalog,195,4,16]; ]
var graphCatalog;
[ @file = "D:\dev\projects\Monkey C\Essence\source\Globals.mc"; @line = 242; @symbol_functiondef = [loadLayout,242,9,19]; ]
function loadLayout() {
D_dev_projects_Monkey_C_Essence_source_Globals_mc_242_22_246_0_start:
[ "D:\dev\projects\Monkey C\Essence\source\Globals.mc" 243 2 ]
    for @D_dev_projects_Monkey_C_Essence_source_Globals_mc_243_2_245_2_for_test @D_dev_projects_Monkey_C_Essence_source_Globals_mc_243_2_245_2_for_incr @D_dev_projects_Monkey_C_Essence_source_Globals_mc_243_2_245_2_for_end;
D_dev_projects_Monkey_C_Essence_source_Globals_mc_243_2_245_2_for_init:
    [ "D_dev_projects_Monkey_C_Essence_source_Globals_mc_243_2_245_2_for_begin" "D_dev_projects_Monkey_C_Essence_source_Globals_mc_243_2_245_2_for_end" ]
    %i.1 = local;
    symbol [ i %i.1 243 11 12 ];
    %tmp.1 = 0;
    lputv %i.1 %tmp.1;
    symbol [ i %i.1 243 11 12 ];
D_dev_projects_Monkey_C_Essence_source_Globals_mc_243_2_245_2_for_test:
    %tmp.2 = lgetv %i.1;
    symbol [ i %tmp.2 243 18 19 ];
    symbol [ fieldLayout %tmp.4 243 22 33 ];
    %tmp.4 = getv ? :fieldLayout;
    symbol [ size %tmp.5 243 34 38 ];
    %tmp.5 = getv function %tmp.4 :size;
    %tmp.6 = invoke %tmp.4 %tmp.5();
    %tmp.7 = lt %tmp.2 %tmp.6;
    bf %tmp.7 @D_dev_projects_Monkey_C_Essence_source_Globals_mc_243_2_245_2_for_end;
D_dev_projects_Monkey_C_Essence_source_Globals_mc_243_2_245_2_for_begin:
D_dev_projects_Monkey_C_Essence_source_Globals_mc_243_53_245_2_start:
[ "D:\dev\projects\Monkey C\Essence\source\Globals.mc" 244 4 ]
    symbol [ fieldLayout %tmp.8 244 4 15 ];
    %tmp.8 = getv self :fieldLayout;
    %tmp.9 = lgetv %i.1;
    symbol [ i %tmp.9 244 16 17 ];
    %tmp.10 = agetv %tmp.8 %tmp.9;
    %tmp.11 = self;
    symbol [ getApp %tmp.12 244 29 35 ];
    %tmp.12 = getv function %tmp.11 :getApp;
    %tmp.13 = invoke %tmp.11 %tmp.12();
    symbol [ getProperty %tmp.14 244 38 49 ];
    %tmp.14 = getv function %tmp.13 :getProperty;
    symbol [ fieldLayout %tmp.16 244 50 61 ];
    %tmp.16 = getv ? :fieldLayout;
    %tmp.17 = lgetv %i.1;
    symbol [ i %tmp.17 244 62 63 ];
    %tmp.18 = agetv %tmp.16 %tmp.17;
    %tmp.19 = "id";
    %tmp.20 = agetv %tmp.18 %tmp.19;
    %tmp.21 = invoke %tmp.13 %tmp.14(%tmp.20);
    %tmp.22 = "data";
    aputv %tmp.10 %tmp.22 %tmp.21;
D_dev_projects_Monkey_C_Essence_source_Globals_mc_243_53_245_2_stop:
D_dev_projects_Monkey_C_Essence_source_Globals_mc_243_2_245_2_for_incr:
[ "D:\dev\projects\Monkey C\Essence\source\Globals.mc" 243 ]
    %tmp.23 = lgetv %i.1;
    symbol [ i %tmp.23 243 46 47 ];
    %tmp.24 = 1;
    %tmp.25 = add %tmp.23 %tmp.24;
    lputv %i.1 %tmp.25;
    symbol [ i %i.1 243 42 43 ];
    goto @D_dev_projects_Monkey_C_Essence_source_Globals_mc_243_2_245_2_for_test;
D_dev_projects_Monkey_C_Essence_source_Globals_mc_243_2_245_2_for_end:
D_dev_projects_Monkey_C_Essence_source_Globals_mc_242_22_246_0_stop:
}
[ @file = "D:\dev\projects\Monkey C\Essence\source\Globals.mc"; @line = 1; ]
<init> {
[ "D:\dev\projects\Monkey C\Essence\source\Globals.mc" 5 11 ]
    %tmp.26 = newa 0;
    putv self :bboxes %tmp.26;
[ "D:\dev\projects\Monkey C\Essence\source\Globals.mc" 6 11 ]
    %tmp.27 = newa 0;
    putv self :boundingBoxes %tmp.27;
[ "D:\dev\projects\Monkey C\Essence\source\Globals.mc" 45 4 ]
    %tmp.28 = newa 8;
    %tmp.29 = newd 2;
    %tmp.30 = "id";
    %tmp.31 = "FieldTop";
    %tmp.32 = dup %tmp.29;
    %tmp.33 = aputv %tmp.32 %tmp.30 %tmp.31;
    %tmp.34 = "data";
    %tmp.35 = 0;
    %tmp.36 = dup %tmp.33;
    %tmp.37 = aputv %tmp.36 %tmp.34 %tmp.35;
    %tmp.38 = dup %tmp.28;
    %tmp.39 = aputv %tmp.38 0 %tmp.37;
    %tmp.40 = newd 2;
    %tmp.41 = "id";
    %tmp.42 = "FieldUpperLeft";
    %tmp.43 = dup %tmp.40;
    %tmp.44 = aputv %tmp.43 %tmp.41 %tmp.42;
    %tmp.45 = "data";
    %tmp.46 = 1;
    %tmp.47 = dup %tmp.44;
    %tmp.48 = aputv %tmp.47 %tmp.45 %tmp.46;
    %tmp.49 = dup %tmp.39;
    %tmp.50 = aputv %tmp.49 1 %tmp.48;
    %tmp.51 = newd 2;
    %tmp.52 = "id";
    %tmp.53 = "FieldUpperCenter";
    %tmp.54 = dup %tmp.51;
    %tmp.55 = aputv %tmp.54 %tmp.52 %tmp.53;
    %tmp.56 = "data";
    %tmp.57 = 2;
    %tmp.58 = dup %tmp.55;
    %tmp.59 = aputv %tmp.58 %tmp.56 %tmp.57;
    %tmp.60 = dup %tmp.50;
    %tmp.61 = aputv %tmp.60 2 %tmp.59;
    %tmp.62 = newd 2;
    %tmp.63 = "id";
    %tmp.64 = "FieldUpperRight";
    %tmp.65 = dup %tmp.62;
    %tmp.66 = aputv %tmp.65 %tmp.63 %tmp.64;
    %tmp.67 = "data";
    %tmp.68 = 3;
    %tmp.69 = dup %tmp.66;
    %tmp.70 = aputv %tmp.69 %tmp.67 %tmp.68;
    %tmp.71 = dup %tmp.61;
    %tmp.72 = aputv %tmp.71 3 %tmp.70;
    %tmp.73 = newd 2;
    %tmp.74 = "id";
    %tmp.75 = "FieldLowerLeft";
    %tmp.76 = dup %tmp.73;
    %tmp.77 = aputv %tmp.76 %tmp.74 %tmp.75;
    %tmp.78 = "data";
    %tmp.79 = 4;
    %tmp.80 = dup %tmp.77;
    %tmp.81 = aputv %tmp.80 %tmp.78 %tmp.79;
    %tmp.82 = dup %tmp.72;
    %tmp.83 = aputv %tmp.82 4 %tmp.81;
    %tmp.84 = newd 2;
    %tmp.85 = "id";
    %tmp.86 = "FieldLowerCenter";
    %tmp.87 = dup %tmp.84;
    %tmp.88 = aputv %tmp.87 %tmp.85 %tmp.86;
    %tmp.89 = "data";
    %tmp.90 = 5;
    %tmp.91 = dup %tmp.88;
    %tmp.92 = aputv %tmp.91 %tmp.89 %tmp.90;
    %tmp.93 = dup %tmp.83;
    %tmp.94 = aputv %tmp.93 5 %tmp.92;
    %tmp.95 = newd 2;
    %tmp.96 = "id";
    %tmp.97 = "FieldLowerRight";
    %tmp.98 = dup %tmp.95;
    %tmp.99 = aputv %tmp.98 %tmp.96 %tmp.97;
    %tmp.100 = "data";
    %tmp.101 = 6;
    %tmp.102 = dup %tmp.99;
    %tmp.103 = aputv %tmp.102 %tmp.100 %tmp.101;
    %tmp.104 = dup %tmp.94;
    %tmp.105 = aputv %tmp.104 6 %tmp.103;
    %tmp.106 = newd 2;
    %tmp.107 = "id";
    %tmp.108 = "FieldBottom";
    %tmp.109 = dup %tmp.106;
    %tmp.110 = aputv %tmp.109 %tmp.107 %tmp.108;
    %tmp.111 = "data";
    %tmp.112 = 7;
    %tmp.113 = dup %tmp.110;
    %tmp.114 = aputv %tmp.113 %tmp.111 %tmp.112;
    %tmp.115 = dup %tmp.105;
    %tmp.116 = aputv %tmp.115 7 %tmp.114;
    putv self :fieldLayout %tmp.116;
[ "D:\dev\projects\Monkey C\Essence\source\Globals.mc" 80 4 ]
    %tmp.117 = newa 16;
    %tmp.118 = newd 5;
    %tmp.119 = "id";
    %tmp.120 = "Empty";
    %tmp.121 = dup %tmp.118;
    %tmp.122 = aputv %tmp.121 %tmp.119 %tmp.120;
    %tmp.123 = "label";
    symbol [ Rez %tmp.125 83 15 18 ];
    %tmp.125 = getv ? :Rez;
    symbol [ Strings %tmp.126 83 19 26 ];
    %tmp.126 = getv %tmp.125 :Strings;
    symbol [ Empty %tmp.127 83 27 32 ];
    %tmp.127 = getv %tmp.126 :Empty;
    %tmp.128 = dup %tmp.122;
    %tmp.129 = aputv %tmp.128 %tmp.123 %tmp.127;
    %tmp.130 = "labelExt";
    symbol [ Rez %tmp.132 84 18 21 ];
    %tmp.132 = getv ? :Rez;
    symbol [ Strings %tmp.133 84 22 29 ];
    %tmp.133 = getv %tmp.132 :Strings;
    symbol [ EmptyExt %tmp.134 84 30 38 ];
    %tmp.134 = getv %tmp.133 :EmptyExt;
    %tmp.135 = dup %tmp.129;
    %tmp.136 = aputv %tmp.135 %tmp.130 %tmp.134;
    %tmp.137 = "getter";
    %tmp.139 = const :getEmpty;
    symbol [ getEmpty %tmp.139 85 17 25 const ];
    %tmp.140 = dup %tmp.136;
    %tmp.141 = aputv %tmp.140 %tmp.137 %tmp.139;
    %tmp.142 = "complicationId";
    %tmp.143 = null;
    %tmp.144 = dup %tmp.141;
    %tmp.145 = aputv %tmp.144 %tmp.142 %tmp.143;
    %tmp.146 = dup %tmp.117;
    %tmp.147 = aputv %tmp.146 0 %tmp.145;
    %tmp.148 = newd 5;
    %tmp.149 = "id";
    %tmp.150 = "Weather";
    %tmp.151 = dup %tmp.148;
    %tmp.152 = aputv %tmp.151 %tmp.149 %tmp.150;
    %tmp.153 = "label";
    symbol [ Rez %tmp.155 90 15 18 ];
    %tmp.155 = getv ? :Rez;
    symbol [ Strings %tmp.156 90 19 26 ];
    %tmp.156 = getv %tmp.155 :Strings;
    symbol [ Weather %tmp.157 90 27 34 ];
    %tmp.157 = getv %tmp.156 :Weather;
    %tmp.158 = dup %tmp.152;
    %tmp.159 = aputv %tmp.158 %tmp.153 %tmp.157;
    %tmp.160 = "labelExt";
    symbol [ Rez %tmp.162 91 18 21 ];
    %tmp.162 = getv ? :Rez;
    symbol [ Strings %tmp.163 91 22 29 ];
    %tmp.163 = getv %tmp.162 :Strings;
    symbol [ WeatherExt %tmp.164 91 30 40 ];
    %tmp.164 = getv %tmp.163 :WeatherExt;
    %tmp.165 = dup %tmp.159;
    %tmp.166 = aputv %tmp.165 %tmp.160 %tmp.164;
    %tmp.167 = "getter";
    %tmp.169 = const :getWeather;
    symbol [ getWeather %tmp.169 92 17 27 const ];
    %tmp.170 = dup %tmp.166;
    %tmp.171 = aputv %tmp.170 %tmp.167 %tmp.169;
    %tmp.172 = "complicationId";
    symbol [ Complications %tmp.173 93 24 37 ];
    %tmp.173 = getm $.Toybox.Complications;
    symbol [ COMPLICATION_TYPE_CURRENT_WEATHER %tmp.174 93 38 71 ];
    %tmp.174 = getv %tmp.173 :COMPLICATION_TYPE_CURRENT_WEATHER;
    %tmp.175 = dup %tmp.171;
    %tmp.176 = aputv %tmp.175 %tmp.172 %tmp.174;
    %tmp.177 = dup %tmp.147;
    %tmp.178 = aputv %tmp.177 1 %tmp.176;
    %tmp.179 = newd 5;
    %tmp.180 = "id";
    %tmp.181 = "Calendar";
    %tmp.182 = dup %tmp.179;
    %tmp.183 = aputv %tmp.182 %tmp.180 %tmp.181;
    %tmp.184 = "label";
    symbol [ Rez %tmp.186 97 15 18 ];
    %tmp.186 = getv ? :Rez;
    symbol [ Strings %tmp.187 97 19 26 ];
    %tmp.187 = getv %tmp.186 :Strings;
    symbol [ Calendar %tmp.188 97 27 35 ];
    %tmp.188 = getv %tmp.187 :Calendar;
    %tmp.189 = dup %tmp.183;
    %tmp.190 = aputv %tmp.189 %tmp.184 %tmp.188;
    %tmp.191 = "labelExt";
    symbol [ Rez %tmp.193 98 18 21 ];
    %tmp.193 = getv ? :Rez;
    symbol [ Strings %tmp.194 98 22 29 ];
    %tmp.194 = getv %tmp.193 :Strings;
    symbol [ CalendarExt %tmp.195 98 30 41 ];
    %tmp.195 = getv %tmp.194 :CalendarExt;
    %tmp.196 = dup %tmp.190;
    %tmp.197 = aputv %tmp.196 %tmp.191 %tmp.195;
    %tmp.198 = "getter";
    %tmp.200 = const :getCalendar;
    symbol [ getCalendar %tmp.200 99 17 28 const ];
    %tmp.201 = dup %tmp.197;
    %tmp.202 = aputv %tmp.201 %tmp.198 %tmp.200;
    %tmp.203 = "complicationId";
    symbol [ Complications %tmp.204 100 24 37 ];
    %tmp.204 = getm $.Toybox.Complications;
    symbol [ COMPLICATION_TYPE_CALENDAR_EVENTS %tmp.205 100 38 71 ];
    %tmp.205 = getv %tmp.204 :COMPLICATION_TYPE_CALENDAR_EVENTS;
    %tmp.206 = dup %tmp.202;
    %tmp.207 = aputv %tmp.206 %tmp.203 %tmp.205;
    %tmp.208 = dup %tmp.178;
    %tmp.209 = aputv %tmp.208 2 %tmp.207;
    %tmp.210 = newd 5;
    %tmp.211 = "id";
    %tmp.212 = "Notifications";
    %tmp.213 = dup %tmp.210;
    %tmp.214 = aputv %tmp.213 %tmp.211 %tmp.212;
    %tmp.215 = "label";
    symbol [ Rez %tmp.217 104 15 18 ];
    %tmp.217 = getv ? :Rez;
    symbol [ Strings %tmp.218 104 19 26 ];
    %tmp.218 = getv %tmp.217 :Strings;
    symbol [ Notifications %tmp.219 104 27 40 ];
    %tmp.219 = getv %tmp.218 :Notifications;
    %tmp.220 = dup %tmp.214;
    %tmp.221 = aputv %tmp.220 %tmp.215 %tmp.219;
    %tmp.222 = "labelExt";
    symbol [ Rez %tmp.224 105 18 21 ];
    %tmp.224 = getv ? :Rez;
    symbol [ Strings %tmp.225 105 22 29 ];
    %tmp.225 = getv %tmp.224 :Strings;
    symbol [ NotificationsExt %tmp.226 105 30 46 ];
    %tmp.226 = getv %tmp.225 :NotificationsExt;
    %tmp.227 = dup %tmp.221;
    %tmp.228 = aputv %tmp.227 %tmp.222 %tmp.226;
    %tmp.229 = "getter";
    %tmp.231 = const :getNotifications;
    symbol [ getNotifications %tmp.231 106 17 33 const ];
    %tmp.232 = dup %tmp.228;
    %tmp.233 = aputv %tmp.232 %tmp.229 %tmp.231;
    %tmp.234 = "complicationId";
    symbol [ Complications %tmp.235 107 24 37 ];
    %tmp.235 = getm $.Toybox.Complications;
    symbol [ COMPLICATION_TYPE_NOTIFICATION_COUNT %tmp.236 107 38 74 ];
    %tmp.236 = getv %tmp.235 :COMPLICATION_TYPE_NOTIFICATION_COUNT;
    %tmp.237 = dup %tmp.233;
    %tmp.238 = aputv %tmp.237 %tmp.234 %tmp.236;
    %tmp.239 = dup %tmp.209;
    %tmp.240 = aputv %tmp.239 3 %tmp.238;
    %tmp.241 = newd 5;
    %tmp.242 = "id";
    %tmp.243 = "SunEvent";
    %tmp.244 = dup %tmp.241;
    %tmp.245 = aputv %tmp.244 %tmp.242 %tmp.243;
    %tmp.246 = "label";
    symbol [ Rez %tmp.248 111 15 18 ];
    %tmp.248 = getv ? :Rez;
    symbol [ Strings %tmp.249 111 19 26 ];
    %tmp.249 = getv %tmp.248 :Strings;
    symbol [ SunEvent %tmp.250 111 27 35 ];
    %tmp.250 = getv %tmp.249 :SunEvent;
    %tmp.251 = dup %tmp.245;
    %tmp.252 = aputv %tmp.251 %tmp.246 %tmp.250;
    %tmp.253 = "labelExt";
    symbol [ Rez %tmp.255 112 18 21 ];
    %tmp.255 = getv ? :Rez;
    symbol [ Strings %tmp.256 112 22 29 ];
    %tmp.256 = getv %tmp.255 :Strings;
    symbol [ SunEventExt %tmp.257 112 30 41 ];
    %tmp.257 = getv %tmp.256 :SunEventExt;
    %tmp.258 = dup %tmp.252;
    %tmp.259 = aputv %tmp.258 %tmp.253 %tmp.257;
    %tmp.260 = "getter";
    %tmp.262 = const :getSunEvent;
    symbol [ getSunEvent %tmp.262 113 17 28 const ];
    %tmp.263 = dup %tmp.259;
    %tmp.264 = aputv %tmp.263 %tmp.260 %tmp.262;
    %tmp.265 = "complicationId";
    symbol [ Complications %tmp.266 114 24 37 ];
    %tmp.266 = getm $.Toybox.Complications;
    symbol [ COMPLICATION_TYPE_SUNRISE %tmp.267 114 38 63 ];
    %tmp.267 = getv %tmp.266 :COMPLICATION_TYPE_SUNRISE;
    %tmp.268 = dup %tmp.264;
    %tmp.269 = aputv %tmp.268 %tmp.265 %tmp.267;
    %tmp.270 = dup %tmp.240;
    %tmp.271 = aputv %tmp.270 4 %tmp.269;
    %tmp.272 = newd 5;
    %tmp.273 = "id";
    %tmp.274 = "Altimeter";
    %tmp.275 = dup %tmp.272;
    %tmp.276 = aputv %tmp.275 %tmp.273 %tmp.274;
    %tmp.277 = "label";
    symbol [ Rez %tmp.279 118 15 18 ];
    %tmp.279 = getv ? :Rez;
    symbol [ Strings %tmp.280 118 19 26 ];
    %tmp.280 = getv %tmp.279 :Strings;
    symbol [ Altimeter %tmp.281 118 27 36 ];
    %tmp.281 = getv %tmp.280 :Altimeter;
    %tmp.282 = dup %tmp.276;
    %tmp.283 = aputv %tmp.282 %tmp.277 %tmp.281;
    %tmp.284 = "labelExt";
    symbol [ Rez %tmp.286 119 18 21 ];
    %tmp.286 = getv ? :Rez;
    symbol [ Strings %tmp.287 119 22 29 ];
    %tmp.287 = getv %tmp.286 :Strings;
    symbol [ AltimeterExt %tmp.288 119 30 42 ];
    %tmp.288 = getv %tmp.287 :AltimeterExt;
    %tmp.289 = dup %tmp.283;
    %tmp.290 = aputv %tmp.289 %tmp.284 %tmp.288;
    %tmp.291 = "getter";
    %tmp.293 = const :getAltimeter;
    symbol [ getAltimeter %tmp.293 120 17 29 const ];
    %tmp.294 = dup %tmp.290;
    %tmp.295 = aputv %tmp.294 %tmp.291 %tmp.293;
    %tmp.296 = "complicationId";
    symbol [ Complications %tmp.297 121 24 37 ];
    %tmp.297 = getm $.Toybox.Complications;
    symbol [ COMPLICATION_TYPE_ALTITUDE %tmp.298 121 38 64 ];
    %tmp.298 = getv %tmp.297 :COMPLICATION_TYPE_ALTITUDE;
    %tmp.299 = dup %tmp.295;
    %tmp.300 = aputv %tmp.299 %tmp.296 %tmp.298;
    %tmp.301 = dup %tmp.271;
    %tmp.302 = aputv %tmp.301 5 %tmp.300;
    %tmp.303 = newd 5;
    %tmp.304 = "id";
    %tmp.305 = "HeartRate";
    %tmp.306 = dup %tmp.303;
    %tmp.307 = aputv %tmp.306 %tmp.304 %tmp.305;
    %tmp.308 = "label";
    symbol [ Rez %tmp.310 125 15 18 ];
    %tmp.310 = getv ? :Rez;
    symbol [ Strings %tmp.311 125 19 26 ];
    %tmp.311 = getv %tmp.310 :Strings;
    symbol [ HeartRate %tmp.312 125 27 36 ];
    %tmp.312 = getv %tmp.311 :HeartRate;
    %tmp.313 = dup %tmp.307;
    %tmp.314 = aputv %tmp.313 %tmp.308 %tmp.312;
    %tmp.315 = "labelExt";
    symbol [ Rez %tmp.317 126 18 21 ];
    %tmp.317 = getv ? :Rez;
    symbol [ Strings %tmp.318 126 22 29 ];
    %tmp.318 = getv %tmp.317 :Strings;
    symbol [ HeartRateExt %tmp.319 126 30 42 ];
    %tmp.319 = getv %tmp.318 :HeartRateExt;
    %tmp.320 = dup %tmp.314;
    %tmp.321 = aputv %tmp.320 %tmp.315 %tmp.319;
    %tmp.322 = "getter";
    %tmp.324 = const :getHeartRate;
    symbol [ getHeartRate %tmp.324 127 17 29 const ];
    %tmp.325 = dup %tmp.321;
    %tmp.326 = aputv %tmp.325 %tmp.322 %tmp.324;
    %tmp.327 = "complicationId";
    symbol [ Complications %tmp.328 128 24 37 ];
    %tmp.328 = getm $.Toybox.Complications;
    symbol [ COMPLICATION_TYPE_HEART_RATE %tmp.329 128 38 66 ];
    %tmp.329 = getv %tmp.328 :COMPLICATION_TYPE_HEART_RATE;
    %tmp.330 = dup %tmp.326;
    %tmp.331 = aputv %tmp.330 %tmp.327 %tmp.329;
    %tmp.332 = dup %tmp.302;
    %tmp.333 = aputv %tmp.332 6 %tmp.331;
    %tmp.334 = newd 5;
    %tmp.335 = "id";
    %tmp.336 = "Barometer";
    %tmp.337 = dup %tmp.334;
    %tmp.338 = aputv %tmp.337 %tmp.335 %tmp.336;
    %tmp.339 = "label";
    symbol [ Rez %tmp.341 132 15 18 ];
    %tmp.341 = getv ? :Rez;
    symbol [ Strings %tmp.342 132 19 26 ];
    %tmp.342 = getv %tmp.341 :Strings;
    symbol [ Barometer %tmp.343 132 27 36 ];
    %tmp.343 = getv %tmp.342 :Barometer;
    %tmp.344 = dup %tmp.338;
    %tmp.345 = aputv %tmp.344 %tmp.339 %tmp.343;
    %tmp.346 = "labelExt";
    symbol [ Rez %tmp.348 133 18 21 ];
    %tmp.348 = getv ? :Rez;
    symbol [ Strings %tmp.349 133 22 29 ];
    %tmp.349 = getv %tmp.348 :Strings;
    symbol [ BarometerExt %tmp.350 133 30 42 ];
    %tmp.350 = getv %tmp.349 :BarometerExt;
    %tmp.351 = dup %tmp.345;
    %tmp.352 = aputv %tmp.351 %tmp.346 %tmp.350;
    %tmp.353 = "getter";
    %tmp.355 = const :getBarometer;
    symbol [ getBarometer %tmp.355 134 17 29 const ];
    %tmp.356 = dup %tmp.352;
    %tmp.357 = aputv %tmp.356 %tmp.353 %tmp.355;
    %tmp.358 = "complicationId";
    symbol [ Complications %tmp.359 135 24 37 ];
    %tmp.359 = getm $.Toybox.Complications;
    symbol [ COMPLICATION_TYPE_SEA_LEVEL_PRESSURE %tmp.360 135 38 74 ];
    %tmp.360 = getv %tmp.359 :COMPLICATION_TYPE_SEA_LEVEL_PRESSURE;
    %tmp.361 = dup %tmp.357;
    %tmp.362 = aputv %tmp.361 %tmp.358 %tmp.360;
    %tmp.363 = dup %tmp.333;
    %tmp.364 = aputv %tmp.363 7 %tmp.362;
    %tmp.365 = newd 5;
    %tmp.366 = "id";
    %tmp.367 = "Battery";
    %tmp.368 = dup %tmp.365;
    %tmp.369 = aputv %tmp.368 %tmp.366 %tmp.367;
    %tmp.370 = "label";
    symbol [ Rez %tmp.372 139 15 18 ];
    %tmp.372 = getv ? :Rez;
    symbol [ Strings %tmp.373 139 19 26 ];
    %tmp.373 = getv %tmp.372 :Strings;
    symbol [ Battery %tmp.374 139 27 34 ];
    %tmp.374 = getv %tmp.373 :Battery;
    %tmp.375 = dup %tmp.369;
    %tmp.376 = aputv %tmp.375 %tmp.370 %tmp.374;
    %tmp.377 = "labelExt";
    symbol [ Rez %tmp.379 140 18 21 ];
    %tmp.379 = getv ? :Rez;
    symbol [ Strings %tmp.380 140 22 29 ];
    %tmp.380 = getv %tmp.379 :Strings;
    symbol [ BatteryExt %tmp.381 140 30 40 ];
    %tmp.381 = getv %tmp.380 :BatteryExt;
    %tmp.382 = dup %tmp.376;
    %tmp.383 = aputv %tmp.382 %tmp.377 %tmp.381;
    %tmp.384 = "getter";
    %tmp.386 = const :getBattery;
    symbol [ getBattery %tmp.386 141 17 27 const ];
    %tmp.387 = dup %tmp.383;
    %tmp.388 = aputv %tmp.387 %tmp.384 %tmp.386;
    %tmp.389 = "complicationId";
    symbol [ Complications %tmp.390 142 24 37 ];
    %tmp.390 = getm $.Toybox.Complications;
    symbol [ COMPLICATION_TYPE_BATTERY %tmp.391 142 38 63 ];
    %tmp.391 = getv %tmp.390 :COMPLICATION_TYPE_BATTERY;
    %tmp.392 = dup %tmp.388;
    %tmp.393 = aputv %tmp.392 %tmp.389 %tmp.391;
    %tmp.394 = dup %tmp.364;
    %tmp.395 = aputv %tmp.394 8 %tmp.393;
    %tmp.396 = newd 5;
    %tmp.397 = "id";
    %tmp.398 = "Stress";
    %tmp.399 = dup %tmp.396;
    %tmp.400 = aputv %tmp.399 %tmp.397 %tmp.398;
    %tmp.401 = "label";
    symbol [ Rez %tmp.403 146 15 18 ];
    %tmp.403 = getv ? :Rez;
    symbol [ Strings %tmp.404 146 19 26 ];
    %tmp.404 = getv %tmp.403 :Strings;
    symbol [ Stress %tmp.405 146 27 33 ];
    %tmp.405 = getv %tmp.404 :Stress;
    %tmp.406 = dup %tmp.400;
    %tmp.407 = aputv %tmp.406 %tmp.401 %tmp.405;
    %tmp.408 = "labelExt";
    symbol [ Rez %tmp.410 147 18 21 ];
    %tmp.410 = getv ? :Rez;
    symbol [ Strings %tmp.411 147 22 29 ];
    %tmp.411 = getv %tmp.410 :Strings;
    symbol [ StressExt %tmp.412 147 30 39 ];
    %tmp.412 = getv %tmp.411 :StressExt;
    %tmp.413 = dup %tmp.407;
    %tmp.414 = aputv %tmp.413 %tmp.408 %tmp.412;
    %tmp.415 = "getter";
    %tmp.417 = const :getStress;
    symbol [ getStress %tmp.417 148 17 26 const ];
    %tmp.418 = dup %tmp.414;
    %tmp.419 = aputv %tmp.418 %tmp.415 %tmp.417;
    %tmp.420 = "complicationId";
    symbol [ Complications %tmp.421 149 24 37 ];
    %tmp.421 = getm $.Toybox.Complications;
    symbol [ COMPLICATION_TYPE_STRESS %tmp.422 149 38 62 ];
    %tmp.422 = getv %tmp.421 :COMPLICATION_TYPE_STRESS;
    %tmp.423 = dup %tmp.419;
    %tmp.424 = aputv %tmp.423 %tmp.420 %tmp.422;
    %tmp.425 = dup %tmp.395;
    %tmp.426 = aputv %tmp.425 9 %tmp.424;
    %tmp.427 = newd 5;
    %tmp.428 = "id";
    %tmp.429 = "BodyBattery";
    %tmp.430 = dup %tmp.427;
    %tmp.431 = aputv %tmp.430 %tmp.428 %tmp.429;
    %tmp.432 = "label";
    symbol [ Rez %tmp.434 153 15 18 ];
    %tmp.434 = getv ? :Rez;
    symbol [ Strings %tmp.435 153 19 26 ];
    %tmp.435 = getv %tmp.434 :Strings;
    symbol [ BodyBattery %tmp.436 153 27 38 ];
    %tmp.436 = getv %tmp.435 :BodyBattery;
    %tmp.437 = dup %tmp.431;
    %tmp.438 = aputv %tmp.437 %tmp.432 %tmp.436;
    %tmp.439 = "labelExt";
    symbol [ Rez %tmp.441 154 18 21 ];
    %tmp.441 = getv ? :Rez;
    symbol [ Strings %tmp.442 154 22 29 ];
    %tmp.442 = getv %tmp.441 :Strings;
    symbol [ BodyBatteryExt %tmp.443 154 30 44 ];
    %tmp.443 = getv %tmp.442 :BodyBatteryExt;
    %tmp.444 = dup %tmp.438;
    %tmp.445 = aputv %tmp.444 %tmp.439 %tmp.443;
    %tmp.446 = "getter";
    %tmp.448 = const :getBodyBattery;
    symbol [ getBodyBattery %tmp.448 155 17 31 const ];
    %tmp.449 = dup %tmp.445;
    %tmp.450 = aputv %tmp.449 %tmp.446 %tmp.448;
    %tmp.451 = "complicationId";
    symbol [ Complications %tmp.452 156 24 37 ];
    %tmp.452 = getm $.Toybox.Complications;
    symbol [ COMPLICATION_TYPE_BODY_BATTERY %tmp.453 156 38 68 ];
    %tmp.453 = getv %tmp.452 :COMPLICATION_TYPE_BODY_BATTERY;
    %tmp.454 = dup %tmp.450;
    %tmp.455 = aputv %tmp.454 %tmp.451 %tmp.453;
    %tmp.456 = dup %tmp.426;
    %tmp.457 = aputv %tmp.456 10 %tmp.455;
    %tmp.458 = newd 5;
    %tmp.459 = "id";
    %tmp.460 = "Steps";
    %tmp.461 = dup %tmp.458;
    %tmp.462 = aputv %tmp.461 %tmp.459 %tmp.460;
    %tmp.463 = "label";
    symbol [ Rez %tmp.465 160 15 18 ];
    %tmp.465 = getv ? :Rez;
    symbol [ Strings %tmp.466 160 19 26 ];
    %tmp.466 = getv %tmp.465 :Strings;
    symbol [ Steps %tmp.467 160 27 32 ];
    %tmp.467 = getv %tmp.466 :Steps;
    %tmp.468 = dup %tmp.462;
    %tmp.469 = aputv %tmp.468 %tmp.463 %tmp.467;
    %tmp.470 = "labelExt";
    symbol [ Rez %tmp.472 161 18 21 ];
    %tmp.472 = getv ? :Rez;
    symbol [ Strings %tmp.473 161 22 29 ];
    %tmp.473 = getv %tmp.472 :Strings;
    symbol [ StepsExt %tmp.474 161 30 38 ];
    %tmp.474 = getv %tmp.473 :StepsExt;
    %tmp.475 = dup %tmp.469;
    %tmp.476 = aputv %tmp.475 %tmp.470 %tmp.474;
    %tmp.477 = "getter";
    %tmp.479 = const :getSteps;
    symbol [ getSteps %tmp.479 162 17 25 const ];
    %tmp.480 = dup %tmp.476;
    %tmp.481 = aputv %tmp.480 %tmp.477 %tmp.479;
    %tmp.482 = "complicationId";
    symbol [ Complications %tmp.483 163 24 37 ];
    %tmp.483 = getm $.Toybox.Complications;
    symbol [ COMPLICATION_TYPE_STEPS %tmp.484 163 38 61 ];
    %tmp.484 = getv %tmp.483 :COMPLICATION_TYPE_STEPS;
    %tmp.485 = dup %tmp.481;
    %tmp.486 = aputv %tmp.485 %tmp.482 %tmp.484;
    %tmp.487 = dup %tmp.457;
    %tmp.488 = aputv %tmp.487 11 %tmp.486;
    %tmp.489 = newd 5;
    %tmp.490 = "id";
    %tmp.491 = "Floors";
    %tmp.492 = dup %tmp.489;
    %tmp.493 = aputv %tmp.492 %tmp.490 %tmp.491;
    %tmp.494 = "label";
    symbol [ Rez %tmp.496 167 15 18 ];
    %tmp.496 = getv ? :Rez;
    symbol [ Strings %tmp.497 167 19 26 ];
    %tmp.497 = getv %tmp.496 :Strings;
    symbol [ Floors %tmp.498 167 27 33 ];
    %tmp.498 = getv %tmp.497 :Floors;
    %tmp.499 = dup %tmp.493;
    %tmp.500 = aputv %tmp.499 %tmp.494 %tmp.498;
    %tmp.501 = "labelExt";
    symbol [ Rez %tmp.503 168 18 21 ];
    %tmp.503 = getv ? :Rez;
    symbol [ Strings %tmp.504 168 22 29 ];
    %tmp.504 = getv %tmp.503 :Strings;
    symbol [ FloorsExt %tmp.505 168 30 39 ];
    %tmp.505 = getv %tmp.504 :FloorsExt;
    %tmp.506 = dup %tmp.500;
    %tmp.507 = aputv %tmp.506 %tmp.501 %tmp.505;
    %tmp.508 = "getter";
    %tmp.510 = const :getFloors;
    symbol [ getFloors %tmp.510 169 17 26 const ];
    %tmp.511 = dup %tmp.507;
    %tmp.512 = aputv %tmp.511 %tmp.508 %tmp.510;
    %tmp.513 = "complicationId";
    symbol [ Complications %tmp.514 170 24 37 ];
    %tmp.514 = getm $.Toybox.Complications;
    symbol [ COMPLICATION_TYPE_FLOORS_CLIMBED %tmp.515 170 38 70 ];
    %tmp.515 = getv %tmp.514 :COMPLICATION_TYPE_FLOORS_CLIMBED;
    %tmp.516 = dup %tmp.512;
    %tmp.517 = aputv %tmp.516 %tmp.513 %tmp.515;
    %tmp.518 = dup %tmp.488;
    %tmp.519 = aputv %tmp.518 12 %tmp.517;
    %tmp.520 = newd 5;
    %tmp.521 = "id";
    %tmp.522 = "BatteryDays";
    %tmp.523 = dup %tmp.520;
    %tmp.524 = aputv %tmp.523 %tmp.521 %tmp.522;
    %tmp.525 = "label";
    symbol [ Rez %tmp.527 174 15 18 ];
    %tmp.527 = getv ? :Rez;
    symbol [ Strings %tmp.528 174 19 26 ];
    %tmp.528 = getv %tmp.527 :Strings;
    symbol [ BatteryDays %tmp.529 174 27 38 ];
    %tmp.529 = getv %tmp.528 :BatteryDays;
    %tmp.530 = dup %tmp.524;
    %tmp.531 = aputv %tmp.530 %tmp.525 %tmp.529;
    %tmp.532 = "labelExt";
    symbol [ Rez %tmp.534 175 18 21 ];
    %tmp.534 = getv ? :Rez;
    symbol [ Strings %tmp.535 175 22 29 ];
    %tmp.535 = getv %tmp.534 :Strings;
    symbol [ BatteryDaysExt %tmp.536 175 30 44 ];
    %tmp.536 = getv %tmp.535 :BatteryDaysExt;
    %tmp.537 = dup %tmp.531;
    %tmp.538 = aputv %tmp.537 %tmp.532 %tmp.536;
    %tmp.539 = "getter";
    %tmp.541 = const :getBatteryDays;
    symbol [ getBatteryDays %tmp.541 176 17 31 const ];
    %tmp.542 = dup %tmp.538;
    %tmp.543 = aputv %tmp.542 %tmp.539 %tmp.541;
    %tmp.544 = "complicationId";
    symbol [ Complications %tmp.545 177 24 37 ];
    %tmp.545 = getm $.Toybox.Complications;
    symbol [ COMPLICATION_TYPE_BATTERY %tmp.546 177 38 63 ];
    %tmp.546 = getv %tmp.545 :COMPLICATION_TYPE_BATTERY;
    %tmp.547 = dup %tmp.543;
    %tmp.548 = aputv %tmp.547 %tmp.544 %tmp.546;
    %tmp.549 = dup %tmp.519;
    %tmp.550 = aputv %tmp.549 13 %tmp.548;
    %tmp.551 = newd 5;
    %tmp.552 = "id";
    %tmp.553 = "SolarIntensity";
    %tmp.554 = dup %tmp.551;
    %tmp.555 = aputv %tmp.554 %tmp.552 %tmp.553;
    %tmp.556 = "label";
    symbol [ Rez %tmp.558 181 15 18 ];
    %tmp.558 = getv ? :Rez;
    symbol [ Strings %tmp.559 181 19 26 ];
    %tmp.559 = getv %tmp.558 :Strings;
    symbol [ SolarIntensity %tmp.560 181 27 41 ];
    %tmp.560 = getv %tmp.559 :SolarIntensity;
    %tmp.561 = dup %tmp.555;
    %tmp.562 = aputv %tmp.561 %tmp.556 %tmp.560;
    %tmp.563 = "labelExt";
    symbol [ Rez %tmp.565 182 18 21 ];
    %tmp.565 = getv ? :Rez;
    symbol [ Strings %tmp.566 182 22 29 ];
    %tmp.566 = getv %tmp.565 :Strings;
    symbol [ SolarIntensityExt %tmp.567 182 30 47 ];
    %tmp.567 = getv %tmp.566 :SolarIntensityExt;
    %tmp.568 = dup %tmp.562;
    %tmp.569 = aputv %tmp.568 %tmp.563 %tmp.567;
    %tmp.570 = "getter";
    %tmp.572 = const :getSolarIntensity;
    symbol [ getSolarIntensity %tmp.572 183 17 34 const ];
    %tmp.573 = dup %tmp.569;
    %tmp.574 = aputv %tmp.573 %tmp.570 %tmp.572;
    %tmp.575 = "complicationId";
    symbol [ Complications %tmp.576 184 24 37 ];
    %tmp.576 = getm $.Toybox.Complications;
    symbol [ COMPLICATION_TYPE_SOLAR_INPUT %tmp.577 184 38 67 ];
    %tmp.577 = getv %tmp.576 :COMPLICATION_TYPE_SOLAR_INPUT;
    %tmp.578 = dup %tmp.574;
    %tmp.579 = aputv %tmp.578 %tmp.575 %tmp.577;
    %tmp.580 = dup %tmp.550;
    %tmp.581 = aputv %tmp.580 14 %tmp.579;
    %tmp.582 = newd 5;
    %tmp.583 = "id";
    %tmp.584 = "Calories";
    %tmp.585 = dup %tmp.582;
    %tmp.586 = aputv %tmp.585 %tmp.583 %tmp.584;
    %tmp.587 = "label";
    symbol [ Rez %tmp.589 188 15 18 ];
    %tmp.589 = getv ? :Rez;
    symbol [ Strings %tmp.590 188 19 26 ];
    %tmp.590 = getv %tmp.589 :Strings;
    symbol [ Calories %tmp.591 188 27 35 ];
    %tmp.591 = getv %tmp.590 :Calories;
    %tmp.592 = dup %tmp.586;
    %tmp.593 = aputv %tmp.592 %tmp.587 %tmp.591;
    %tmp.594 = "labelExt";
    symbol [ Rez %tmp.596 189 18 21 ];
    %tmp.596 = getv ? :Rez;
    symbol [ Strings %tmp.597 189 22 29 ];
    %tmp.597 = getv %tmp.596 :Strings;
    symbol [ CaloriesExt %tmp.598 189 30 41 ];
    %tmp.598 = getv %tmp.597 :CaloriesExt;
    %tmp.599 = dup %tmp.593;
    %tmp.600 = aputv %tmp.599 %tmp.594 %tmp.598;
    %tmp.601 = "getter";
    %tmp.603 = const :getCalories;
    symbol [ getCalories %tmp.603 190 17 28 const ];
    %tmp.604 = dup %tmp.600;
    %tmp.605 = aputv %tmp.604 %tmp.601 %tmp.603;
    %tmp.606 = "complicationId";
    symbol [ Complications %tmp.607 191 24 37 ];
    %tmp.607 = getm $.Toybox.Complications;
    symbol [ COMPLICATION_TYPE_CALORIES %tmp.608 191 38 64 ];
    %tmp.608 = getv %tmp.607 :COMPLICATION_TYPE_CALORIES;
    %tmp.609 = dup %tmp.605;
    %tmp.610 = aputv %tmp.609 %tmp.606 %tmp.608;
    %tmp.611 = dup %tmp.581;
    %tmp.612 = aputv %tmp.611 15 %tmp.610;
    putv self :fieldCatalog %tmp.612;
[ "D:\dev\projects\Monkey C\Essence\source\Globals.mc" 195 4 ]
    %tmp.613 = newa 4;
    %tmp.614 = newd 9;
    %tmp.615 = "id";
    %tmp.616 = "fieldCatalog";
    %tmp.617 = dup %tmp.614;
    %tmp.618 = aputv %tmp.617 %tmp.615 %tmp.616;
    %tmp.619 = "label";
    %tmp.620 = null;
    %tmp.621 = dup %tmp.618;
    %tmp.622 = aputv %tmp.621 %tmp.619 %tmp.620;
    %tmp.623 = "labelExt";
    symbol [ Rez %tmp.625 199 18 21 ];
    %tmp.625 = getv ? :Rez;
    symbol [ Strings %tmp.626 199 22 29 ];
    %tmp.626 = getv %tmp.625 :Strings;
    symbol [ ShowGraphfieldCatalog %tmp.627 199 30 51 ];
    %tmp.627 = getv %tmp.626 :ShowGraphfieldCatalog;
    %tmp.628 = dup %tmp.622;
    %tmp.629 = aputv %tmp.628 %tmp.623 %tmp.627;
    %tmp.630 = "getter";
    %tmp.632 = const :getEmpty;
    symbol [ getEmpty %tmp.632 200 17 25 const ];
    %tmp.633 = dup %tmp.629;
    %tmp.634 = aputv %tmp.633 %tmp.630 %tmp.632;
    %tmp.635 = "iterator";
    %tmp.636 = null;
    %tmp.637 = dup %tmp.634;
    %tmp.638 = aputv %tmp.637 %tmp.635 %tmp.636;
    %tmp.639 = "complicationId";
    %tmp.640 = null;
    %tmp.641 = dup %tmp.638;
    %tmp.642 = aputv %tmp.641 %tmp.639 %tmp.640;
    %tmp.643 = "color";
    %tmp.644 = null;
    %tmp.645 = dup %tmp.642;
    %tmp.646 = aputv %tmp.645 %tmp.643 %tmp.644;
    %tmp.647 = "colorDark";
    %tmp.648 = null;
    %tmp.649 = dup %tmp.646;
    %tmp.650 = aputv %tmp.649 %tmp.647 %tmp.648;
    %tmp.651 = "scale";
    %tmp.652 = 0.9;
    %tmp.653 = dup %tmp.650;
    %tmp.654 = aputv %tmp.653 %tmp.651 %tmp.652;
    %tmp.655 = dup %tmp.613;
    %tmp.656 = aputv %tmp.655 0 %tmp.654;
    %tmp.657 = newd 9;
    %tmp.658 = "id";
    %tmp.659 = "HeartRate";
    %tmp.660 = dup %tmp.657;
    %tmp.661 = aputv %tmp.660 %tmp.658 %tmp.659;
    %tmp.662 = "label";
    symbol [ Rez %tmp.664 209 15 18 ];
    %tmp.664 = getv ? :Rez;
    symbol [ Strings %tmp.665 209 19 26 ];
    %tmp.665 = getv %tmp.664 :Strings;
    symbol [ HeartRate %tmp.666 209 27 36 ];
    %tmp.666 = getv %tmp.665 :HeartRate;
    %tmp.667 = dup %tmp.661;
    %tmp.668 = aputv %tmp.667 %tmp.662 %tmp.666;
    %tmp.669 = "labelExt";
    symbol [ Rez %tmp.671 210 18 21 ];
    %tmp.671 = getv ? :Rez;
    symbol [ Strings %tmp.672 210 22 29 ];
    %tmp.672 = getv %tmp.671 :Strings;
    symbol [ ShowGraphHeartRate %tmp.673 210 30 48 ];
    %tmp.673 = getv %tmp.672 :ShowGraphHeartRate;
    %tmp.674 = dup %tmp.668;
    %tmp.675 = aputv %tmp.674 %tmp.669 %tmp.673;
    %tmp.676 = "getter";
    %tmp.678 = const :getHeartRate;
    symbol [ getHeartRate %tmp.678 211 17 29 const ];
    %tmp.679 = dup %tmp.675;
    %tmp.680 = aputv %tmp.679 %tmp.676 %tmp.678;
    %tmp.681 = "iterator";
    %tmp.683 = const :getHeartRateHistory;
    symbol [ getHeartRateHistory %tmp.683 212 19 38 const ];
    %tmp.684 = dup %tmp.680;
    %tmp.685 = aputv %tmp.684 %tmp.681 %tmp.683;
    %tmp.686 = "complicationId";
    symbol [ Complications %tmp.687 213 24 37 ];
    %tmp.687 = getm $.Toybox.Complications;
    symbol [ COMPLICATION_TYPE_HEART_RATE %tmp.688 213 38 66 ];
    %tmp.688 = getv %tmp.687 :COMPLICATION_TYPE_HEART_RATE;
    %tmp.689 = dup %tmp.685;
    %tmp.690 = aputv %tmp.689 %tmp.686 %tmp.688;
    %tmp.691 = "color";
    symbol [ Graphics %tmp.692 214 15 23 ];
    %tmp.692 = getm $.Toybox.Graphics;
    symbol [ COLOR_RED %tmp.693 214 24 33 ];
    %tmp.693 = getv %tmp.692 :COLOR_RED;
    %tmp.694 = dup %tmp.690;
    %tmp.695 = aputv %tmp.694 %tmp.691 %tmp.693;
    %tmp.696 = "colorDark";
    symbol [ Graphics %tmp.697 215 19 27 ];
    %tmp.697 = getm $.Toybox.Graphics;
    symbol [ COLOR_DK_RED %tmp.698 215 28 40 ];
    %tmp.698 = getv %tmp.697 :COLOR_DK_RED;
    %tmp.699 = dup %tmp.695;
    %tmp.700 = aputv %tmp.699 %tmp.696 %tmp.698;
    %tmp.701 = "scale";
    %tmp.702 = 0.9;
    %tmp.703 = dup %tmp.700;
    %tmp.704 = aputv %tmp.703 %tmp.701 %tmp.702;
    %tmp.705 = dup %tmp.656;
    %tmp.706 = aputv %tmp.705 1 %tmp.704;
    %tmp.707 = newd 9;
    %tmp.708 = "id";
    %tmp.709 = "Barometer";
    %tmp.710 = dup %tmp.707;
    %tmp.711 = aputv %tmp.710 %tmp.708 %tmp.709;
    %tmp.712 = "label";
    symbol [ Rez %tmp.714 220 15 18 ];
    %tmp.714 = getv ? :Rez;
    symbol [ Strings %tmp.715 220 19 26 ];
    %tmp.715 = getv %tmp.714 :Strings;
    symbol [ Barometer %tmp.716 220 27 36 ];
    %tmp.716 = getv %tmp.715 :Barometer;
    %tmp.717 = dup %tmp.711;
    %tmp.718 = aputv %tmp.717 %tmp.712 %tmp.716;
    %tmp.719 = "labelExt";
    symbol [ Rez %tmp.721 221 18 21 ];
    %tmp.721 = getv ? :Rez;
    symbol [ Strings %tmp.722 221 22 29 ];
    %tmp.722 = getv %tmp.721 :Strings;
    symbol [ ShowGraphPressure %tmp.723 221 30 47 ];
    %tmp.723 = getv %tmp.722 :ShowGraphPressure;
    %tmp.724 = dup %tmp.718;
    %tmp.725 = aputv %tmp.724 %tmp.719 %tmp.723;
    %tmp.726 = "getter";
    %tmp.728 = const :getBarometer;
    symbol [ getBarometer %tmp.728 222 17 29 const ];
    %tmp.729 = dup %tmp.725;
    %tmp.730 = aputv %tmp.729 %tmp.726 %tmp.728;
    %tmp.731 = "iterator";
    %tmp.733 = const :getPressureHistory;
    symbol [ getPressureHistory %tmp.733 223 19 37 const ];
    %tmp.734 = dup %tmp.730;
    %tmp.735 = aputv %tmp.734 %tmp.731 %tmp.733;
    %tmp.736 = "complicationId";
    symbol [ Complications %tmp.737 224 24 37 ];
    %tmp.737 = getm $.Toybox.Complications;
    symbol [ COMPLICATION_TYPE_SEA_LEVEL_PRESSURE %tmp.738 224 38 74 ];
    %tmp.738 = getv %tmp.737 :COMPLICATION_TYPE_SEA_LEVEL_PRESSURE;
    %tmp.739 = dup %tmp.735;
    %tmp.740 = aputv %tmp.739 %tmp.736 %tmp.738;
    %tmp.741 = "color";
    symbol [ Graphics %tmp.742 225 15 23 ];
    %tmp.742 = getm $.Toybox.Graphics;
    symbol [ COLOR_BLUE %tmp.743 225 24 34 ];
    %tmp.743 = getv %tmp.742 :COLOR_BLUE;
    %tmp.744 = dup %tmp.740;
    %tmp.745 = aputv %tmp.744 %tmp.741 %tmp.743;
    %tmp.746 = "colorDark";
    symbol [ Graphics %tmp.747 226 19 27 ];
    %tmp.747 = getm $.Toybox.Graphics;
    symbol [ COLOR_DK_BLUE %tmp.748 226 28 41 ];
    %tmp.748 = getv %tmp.747 :COLOR_DK_BLUE;
    %tmp.749 = dup %tmp.745;
    %tmp.750 = aputv %tmp.749 %tmp.746 %tmp.748;
    %tmp.751 = "scale";
    %tmp.752 = 0.99;
    %tmp.753 = dup %tmp.750;
    %tmp.754 = aputv %tmp.753 %tmp.751 %tmp.752;
    %tmp.755 = dup %tmp.706;
    %tmp.756 = aputv %tmp.755 2 %tmp.754;
    %tmp.757 = newd 9;
    %tmp.758 = "id";
    %tmp.759 = "Altimeter";
    %tmp.760 = dup %tmp.757;
    %tmp.761 = aputv %tmp.760 %tmp.758 %tmp.759;
    %tmp.762 = "label";
    symbol [ Rez %tmp.764 231 15 18 ];
    %tmp.764 = getv ? :Rez;
    symbol [ Strings %tmp.765 231 19 26 ];
    %tmp.765 = getv %tmp.764 :Strings;
    symbol [ Altimeter %tmp.766 231 27 36 ];
    %tmp.766 = getv %tmp.765 :Altimeter;
    %tmp.767 = dup %tmp.761;
    %tmp.768 = aputv %tmp.767 %tmp.762 %tmp.766;
    %tmp.769 = "labelExt";
    symbol [ Rez %tmp.771 232 18 21 ];
    %tmp.771 = getv ? :Rez;
    symbol [ Strings %tmp.772 232 22 29 ];
    %tmp.772 = getv %tmp.771 :Strings;
    symbol [ ShowGraphAltimeter %tmp.773 232 30 48 ];
    %tmp.773 = getv %tmp.772 :ShowGraphAltimeter;
    %tmp.774 = dup %tmp.768;
    %tmp.775 = aputv %tmp.774 %tmp.769 %tmp.773;
    %tmp.776 = "getter";
    %tmp.778 = const :getAltimeter;
    symbol [ getAltimeter %tmp.778 233 17 29 const ];
    %tmp.779 = dup %tmp.775;
    %tmp.780 = aputv %tmp.779 %tmp.776 %tmp.778;
    %tmp.781 = "iterator";
    %tmp.783 = const :getElevationHistory;
    symbol [ getElevationHistory %tmp.783 234 19 38 const ];
    %tmp.784 = dup %tmp.780;
    %tmp.785 = aputv %tmp.784 %tmp.781 %tmp.783;
    %tmp.786 = "complicationId";
    symbol [ Complications %tmp.787 235 24 37 ];
    %tmp.787 = getm $.Toybox.Complications;
    symbol [ COMPLICATION_TYPE_ALTITUDE %tmp.788 235 38 64 ];
    %tmp.788 = getv %tmp.787 :COMPLICATION_TYPE_ALTITUDE;
    %tmp.789 = dup %tmp.785;
    %tmp.790 = aputv %tmp.789 %tmp.786 %tmp.788;
    %tmp.791 = "colorDark";
    symbol [ Graphics %tmp.792 236 19 27 ];
    %tmp.792 = getm $.Toybox.Graphics;
    symbol [ COLOR_GREEN %tmp.793 236 28 39 ];
    %tmp.793 = getv %tmp.792 :COLOR_GREEN;
    %tmp.794 = dup %tmp.790;
    %tmp.795 = aputv %tmp.794 %tmp.791 %tmp.793;
    %tmp.796 = "color";
    symbol [ Graphics %tmp.797 237 15 23 ];
    %tmp.797 = getm $.Toybox.Graphics;
    symbol [ COLOR_DK_GREEN %tmp.798 237 24 38 ];
    %tmp.798 = getv %tmp.797 :COLOR_DK_GREEN;
    %tmp.799 = dup %tmp.795;
    %tmp.800 = aputv %tmp.799 %tmp.796 %tmp.798;
    %tmp.801 = "scale";
    %tmp.802 = 0.9;
    %tmp.803 = dup %tmp.800;
    %tmp.804 = aputv %tmp.803 %tmp.801 %tmp.802;
    %tmp.805 = dup %tmp.756;
    %tmp.806 = aputv %tmp.805 3 %tmp.804;
    putv self :graphCatalog %tmp.806;
}
